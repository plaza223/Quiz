[{"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\index.js":"1","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\App.js":"2","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\reportWebVitals.js":"3","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\api.js":"4","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\Dashboard\\Dashboard.js":"5","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\BasicGame\\BasicGame.js":"6","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\Dashboard\\DashboardItems.js":"7","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\BasicGame\\Answer.js":"8"},{"size":517,"mtime":1608730595837,"results":"9","hashOfConfig":"10"},{"size":697,"mtime":1609102523611,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1608730595843,"results":"12","hashOfConfig":"10"},{"size":929,"mtime":1609102523641,"results":"13","hashOfConfig":"10"},{"size":524,"mtime":1609102523633,"results":"14","hashOfConfig":"10"},{"size":3013,"mtime":1609106381410,"results":"15","hashOfConfig":"10"},{"size":457,"mtime":1609102523637,"results":"16","hashOfConfig":"10"},{"size":1029,"mtime":1609103174817,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"wbdukk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\index.js",[],["37","38"],"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\App.js",["39"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport DashboardMain from \"./Components/Dashboard/Dashboard\";\r\nimport BasicGame from \"./Components/BasicGame/BasicGame\";\r\n\r\nimport { getQuestions } from \"./api\";\r\n\r\ngetQuestions();\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <DashboardMain />\r\n          </Route>\r\n          <Route path=\"/basicgame\">\r\n            <BasicGame />\r\n          </Route>\r\n          {/* <Route path=\"/\"></Route> */}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\reportWebVitals.js",[],"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\api.js",[],"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\BasicGame\\BasicGame.js",["40"],"import React, { Component } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport { getQuestions } from \"../../api\";\r\nimport \"./BasicGame.css\";\r\n\r\nexport class BasicGame extends Component {\r\n  state = {\r\n    questions: [],\r\n    allAnswers: [],\r\n    level: 0,\r\n    answerCorrect: \"pending\",\r\n    chosenAnswer: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const questionsArr = await getQuestions();\r\n    this.setState({\r\n      questions: questionsArr,\r\n      allAnswers: questionsArr[this.state.level]?.incorrect_answers\r\n        ?.concat(questionsArr[this.state.level]?.correct_answer)\r\n        .sort(() => 0.5 - Math.random()),\r\n    });\r\n  }\r\n  updateQuestion = async () => {\r\n    if (this.state.answerCorrect === \"pending\") return;\r\n    this.state.answerCorrect === \"true\"\r\n      ? this.setState({\r\n          level: this.state.level + 1,\r\n        })\r\n      : this.setState({\r\n          level: 0,\r\n        });\r\n    this.setState({\r\n      answerCorrect: \"pending\",\r\n      chosenAnswer: null,\r\n    });\r\n\r\n    if (this.state.level > 0) {\r\n      this.setState({\r\n        allAnswers: this.state.questions[this.state.level]?.incorrect_answers\r\n          ?.concat(this.state.questions[this.state.level]?.correct_answer)\r\n          .sort(() => 0.5 - Math.random()),\r\n      });\r\n    } else {\r\n      const questionsArr = await getQuestions();\r\n      this.setState({\r\n        questions: questionsArr,\r\n        allAnswers: questionsArr[this.state.level]?.incorrect_answers\r\n          ?.concat(questionsArr[this.state.level]?.correct_answer)\r\n          .sort(() => 0.5 - Math.random()),\r\n      });\r\n    }\r\n  };\r\n  componentDidUpdate() {\r\n    if (this.state.answerCorrect === \"pending\") return;\r\n    setTimeout(() => {\r\n      this.updateQuestion();\r\n    }, 2000);\r\n  }\r\n\r\n  checkIfCorrect = (answer, correctAnswer) => {\r\n    console.log(answer);\r\n    return answer === correctAnswer\r\n      ? this.setState({ answerCorrect: \"true\" })\r\n      : this.setState({ answerCorrect: \"false\" });\r\n  };\r\n\r\n  handleChoice = (answer) => {\r\n    this.setState({ chosenAnswer: answer });\r\n  };\r\n  render() {\r\n    const { questions, level } = this.state;\r\n    const correctAnswer = questions[level]?.correct_answer;\r\n    const incorrectAnswers = questions[level]?.incorrect_answers;\r\n\r\n    let chosenAnswerColor = null;\r\n\r\n    return (\r\n      <div className=\"question__container\">\r\n        <h1 className=\"question__container__h1\">{questions[level]?.question}</h1>\r\n        <div className=\"question__container__answers\">\r\n          {this.state.allAnswers?.map((answer) => (\r\n            <Answer\r\n              answer={answer}\r\n              answerCorrect={this.state.answerCorrect}\r\n              chosenAnswerColor={chosenAnswerColor}\r\n              chosenAnswer={this.state.chosenAnswer}\r\n              checkIfCorrect={this.checkIfCorrect}\r\n              correctAnswer={correctAnswer}\r\n              handleChoice={this.handleChoice}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasicGame;\r\n","C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\Dashboard\\DashboardItems.js",[],"C:\\Users\\Korisnik\\Desktop\\Quizz\\quiz\\quiz\\src\\Components\\BasicGame\\Answer.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":50,"nodeType":"47","messageId":"48","endLine":2,"endColumn":54},{"ruleId":"45","severity":1,"message":"49","line":74,"column":11,"nodeType":"47","messageId":"48","endLine":74,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'incorrectAnswers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]